{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Aleks\\\\OneDrive\\\\Tiedostot\\\\New folder\\\\WebSovProjekti\\\\src\\\\components\\\\charts\\\\V1.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from \"react\";\nimport { Chart } from \"chart.js/auto\";\nimport { Line } from \"react-chartjs-2\";\nimport \"chartjs-adapter-luxon\";\nimport { useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function V1() {\n  _s();\n  const [globalA, setGlobalA] = useState(\"\");\n  const [globalM, setGlobalM] = useState(\"\");\n  const [northA, setNorthA] = useState(\"\");\n  const [northM, setNorthM] = useState(\"\");\n  const [southM, setSouthM] = useState(\"\");\n  const URL = 'http://localhost:3001/';\n\n  // Hakee tiedot tietokannasta\n  const getGlobalData = () => {\n    axios.get(`${URL}global`).then(response => {\n      setGlobalA(response.data);\n    }).catch(error => console.error(`Error: ${error}`));\n  };\n  const getGlobalMonthlyData = () => {\n    axios.get(`${URL}globalmonthly`).then(response => {\n      setGlobalM(response.data);\n    }).catch(error => console.error(`Error: ${error}`));\n  };\n  const getNorthernData = () => {\n    axios.get(`${URL}northern`).then(response => {\n      setNorthA(response.data);\n    }).catch(error => console.error(`Error: ${error}`));\n  };\n  const getNorthernMonthlyData = () => {\n    axios.get(`${URL}northernmonthly`).then(response => {\n      setNorthM(response.data);\n    }).catch(error => console.error(`Error: ${error}`));\n  };\n  const getSouthernMonthlyData = () => {\n    axios.get(`${URL}southernmonthly`).then(response => {\n      setSouthM(response.data);\n    }).catch(error => console.error(`Error: ${error}`));\n  };\n\n  // Kutsuu funktiota aina, kun sivu ladataan\n  useEffect(() => {\n    getGlobalData();\n    getGlobalMonthlyData();\n    getNorthernData();\n    getNorthernMonthlyData();\n    getSouthernMonthlyData();\n  }, []);\n  const data = {\n    datasets: [{\n      label: \"Global Annual\",\n      data: globalA,\n      // tilamuuttuja, johon data on tallennettu tietokannasta\n      borderColor: \"rgb(219,112,147)\",\n      backgroundColor: \"rgba(219,112,147, 0.5)\",\n      parsing: {\n        xAxisKey: \"Time\",\n        // x-akselin muuttuja tietokannassa\n        yAxisKey: \"Anomaly (deg C)\" // y-akselin muuttuja tietokannassa\n      },\n\n      pointRadius: 1\n    }, {\n      label: \"Global Monthly\",\n      data: globalM,\n      borderColor: \"rgb(255,182,193)\",\n      backgroundColor: \"rgba(255,182,193, 0.5)\",\n      parsing: {\n        xAxisKey: \"Time\",\n        yAxisKey: \"Anomaly (deg C)\"\n      },\n      pointRadius: 1\n    }, {\n      label: \"Northern Hemisphere Annual\",\n      data: northA,\n      borderColor: \"rgb(128,128,128)\",\n      backgroundColor: \"rgba(128,128,128, 0.5)\",\n      parsing: {\n        xAxisKey: \"Time\",\n        yAxisKey: \"Anomaly (deg C)\"\n      },\n      pointRadius: 1\n    }, {\n      label: \"Northern Hemisphere Monthly\",\n      data: northM,\n      borderColor: \"rgb(192,192,192)\",\n      backgroundColor: \"rgba(192,192,192, 0.5)\",\n      parsing: {\n        xAxisKey: \"Time\",\n        yAxisKey: \"Anomaly (deg C)\"\n      },\n      pointRadius: 1\n    }, {\n      label: \"Southern Hemisphere Monthly\",\n      data: southM,\n      borderColor: \"rgb(152,251,152)\",\n      backgroundColor: \"rgba(152,251,152, 0.5)\",\n      parsing: {\n        xAxisKey: \"Time\",\n        yAxisKey: \"Anomaly (deg C)\"\n      },\n      pointRadius: 1\n    }]\n  };\n  const options = {\n    responsive: true,\n    plugins: {\n      legend: {\n        position: \"top\"\n      },\n      title: {\n        display: true\n        //text: \"Visualisation 1\",\n      }\n    },\n\n    scales: {\n      x: {\n        type: \"time\",\n        time: {\n          unit: \"month\"\n        }\n      },\n      y: {\n        type: \"linear\",\n        position: \"right\"\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"v1\",\n    style: {\n      width: \"75%\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Temperature Anomalies from 1850\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Line, {\n      options: options,\n      data: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n      href: \"https://www.metoffice.gov.uk/hadobs/hadcrut5/\",\n      target: \"_blank\",\n      children: \"Datasets\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 154,\n    columnNumber: 9\n  }, this);\n}\n_s(V1, \"ukttMNeDAMR9OmNULg7z8/b6Jpo=\");\n_c = V1;\nvar _c;\n$RefreshReg$(_c, \"V1\");","map":{"version":3,"names":["React","useEffect","Chart","Line","useState","axios","V1","globalA","setGlobalA","globalM","setGlobalM","northA","setNorthA","northM","setNorthM","southM","setSouthM","URL","getGlobalData","get","then","response","data","catch","error","console","getGlobalMonthlyData","getNorthernData","getNorthernMonthlyData","getSouthernMonthlyData","datasets","label","borderColor","backgroundColor","parsing","xAxisKey","yAxisKey","pointRadius","options","responsive","plugins","legend","position","title","display","scales","x","type","time","unit","y","width"],"sources":["C:/Users/Aleks/OneDrive/Tiedostot/New folder/WebSovProjekti/src/components/charts/V1.js"],"sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { Chart } from \"chart.js/auto\";\r\nimport { Line } from \"react-chartjs-2\";\r\nimport \"chartjs-adapter-luxon\";\r\nimport { useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nexport default function V1() {\r\n    const [globalA, setGlobalA] = useState(\"\");\r\n    const [globalM, setGlobalM] = useState(\"\");\r\n    const [northA, setNorthA] = useState(\"\");\r\n    const [northM, setNorthM] = useState(\"\");\r\n    const [southM, setSouthM] = useState(\"\");\r\n\r\n    const URL = 'http://localhost:3001/'\r\n\r\n\r\n    // Hakee tiedot tietokannasta\r\n    const getGlobalData = () => {\r\n        axios.get(`${URL}global`)\r\n            .then((response) => {\r\n                setGlobalA(response.data);\r\n            }).catch(error =>\r\n                console.error(`Error: ${error}`));\r\n    }\r\n\r\n    const getGlobalMonthlyData = () => {\r\n        axios.get(`${URL}globalmonthly`)\r\n            .then((response) => {\r\n                setGlobalM(response.data);\r\n            }).catch(error =>\r\n                console.error(`Error: ${error}`));\r\n    }\r\n\r\n    const getNorthernData = () => {\r\n        axios.get(`${URL}northern`)\r\n            .then((response) => {\r\n                setNorthA(response.data);\r\n            }).catch(error =>\r\n                console.error(`Error: ${error}`));\r\n    }\r\n\r\n    const getNorthernMonthlyData = () => {\r\n        axios.get(`${URL}northernmonthly`)\r\n            .then((response) => {\r\n                setNorthM(response.data);\r\n            }).catch(error =>\r\n                console.error(`Error: ${error}`));\r\n    }\r\n\r\n    const getSouthernMonthlyData = () => {\r\n        axios.get(`${URL}southernmonthly`)\r\n            .then((response) => {\r\n                setSouthM(response.data);\r\n            }).catch(error =>\r\n                console.error(`Error: ${error}`));\r\n    }\r\n\r\n    // Kutsuu funktiota aina, kun sivu ladataan\r\n    useEffect(() => {\r\n        getGlobalData();\r\n        getGlobalMonthlyData();\r\n        getNorthernData();\r\n        getNorthernMonthlyData();\r\n        getSouthernMonthlyData();\r\n    }, []);\r\n\r\n    const data = {\r\n        datasets: [\r\n            {\r\n                label: \"Global Annual\",\r\n                data: globalA,                                      // tilamuuttuja, johon data on tallennettu tietokannasta\r\n                borderColor: \"rgb(219,112,147)\",\r\n                backgroundColor: \"rgba(219,112,147, 0.5)\",\r\n                parsing: {\r\n                    xAxisKey: \"Time\",                               // x-akselin muuttuja tietokannassa\r\n                    yAxisKey: \"Anomaly (deg C)\",                    // y-akselin muuttuja tietokannassa\r\n                },\r\n                pointRadius: 1,\r\n            },\r\n            {\r\n                label: \"Global Monthly\",\r\n                data: globalM,\r\n                borderColor: \"rgb(255,182,193)\",\r\n                backgroundColor: \"rgba(255,182,193, 0.5)\",\r\n                parsing: {\r\n                    xAxisKey: \"Time\",\r\n                    yAxisKey: \"Anomaly (deg C)\",\r\n                },\r\n                pointRadius: 1,\r\n            },\r\n            {\r\n                label: \"Northern Hemisphere Annual\",\r\n                data: northA,\r\n                borderColor: \"rgb(128,128,128)\",\r\n                backgroundColor: \"rgba(128,128,128, 0.5)\",\r\n                parsing: {\r\n                    xAxisKey: \"Time\",\r\n                    yAxisKey: \"Anomaly (deg C)\",\r\n                },\r\n                pointRadius: 1,\r\n            },\r\n            {\r\n                label: \"Northern Hemisphere Monthly\",\r\n                data: northM,\r\n                borderColor: \"rgb(192,192,192)\",\r\n                backgroundColor: \"rgba(192,192,192, 0.5)\",\r\n                parsing: {\r\n                    xAxisKey: \"Time\",\r\n                    yAxisKey: \"Anomaly (deg C)\",\r\n                },\r\n                pointRadius: 1,\r\n            },\r\n            {\r\n                label: \"Southern Hemisphere Monthly\",\r\n                data: southM,\r\n                borderColor: \"rgb(152,251,152)\",\r\n                backgroundColor: \"rgba(152,251,152, 0.5)\",\r\n                parsing: {\r\n                    xAxisKey: \"Time\",\r\n                    yAxisKey: \"Anomaly (deg C)\",\r\n                },\r\n                pointRadius: 1,\r\n            },\r\n        ],\r\n    };\r\n\r\n    const options = {\r\n        responsive: true,\r\n        plugins: {\r\n            legend: {\r\n                position: \"top\",\r\n            },\r\n            title: {\r\n                display: true,\r\n                //text: \"Visualisation 1\",\r\n            },\r\n        },\r\n        scales: {\r\n            x: {\r\n                type: \"time\",\r\n                time: {\r\n                    unit: \"month\"\r\n                }\r\n            },\r\n            y: {\r\n                type: \"linear\",\r\n                position: \"right\",\r\n            },\r\n        },\r\n    };\r\n\r\n    return (\r\n        <div className=\"v1\" style={{ width: \"75%\" }}>\r\n            <h2>Temperature Anomalies from 1850</h2>\r\n            <Line options={options} data={data} />\r\n            <a href=\"https://www.metoffice.gov.uk/hadobs/hadcrut5/\" target=\"_blank\" >Datasets</a>\r\n        </div>\r\n    );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}